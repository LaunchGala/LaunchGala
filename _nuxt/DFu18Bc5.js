import{r,g as O}from"./DC9Rc9iq.js";const l=1,c=1e6,o={ADD_TOAST:"ADD_TOAST",UPDATE_TOAST:"UPDATE_TOAST",DISMISS_TOAST:"DISMISS_TOAST",REMOVE_TOAST:"REMOVE_TOAST"};let u=0;function d(){return u=(u+1)%Number.MAX_VALUE,u.toString()}const n=new Map;function A(e){if(n.has(e))return;const t=setTimeout(()=>{n.delete(e),T({type:o.REMOVE_TOAST,toastId:e})},c);n.set(e,t)}const s=r({toasts:[]});function T(e){switch(e.type){case o.ADD_TOAST:s.value.toasts=[e.toast,...s.value.toasts].slice(0,l);break;case o.UPDATE_TOAST:s.value.toasts=s.value.toasts.map(t=>t.id===e.toast.id?{...t,...e.toast}:t);break;case o.DISMISS_TOAST:{const{toastId:t}=e;t?A(t):s.value.toasts.forEach(a=>{A(a.id)}),s.value.toasts=s.value.toasts.map(a=>a.id===t||t===void 0?{...a,open:!1}:a);break}case o.REMOVE_TOAST:e.toastId===void 0?s.value.toasts=[]:s.value.toasts=s.value.toasts.filter(t=>t.id!==e.toastId);break}}function p(){return{toasts:O(()=>s.value.toasts),toast:i,dismiss:e=>T({type:o.DISMISS_TOAST,toastId:e})}}function i(e){const t=d(),a=S=>T({type:o.UPDATE_TOAST,toast:{...S,id:t}}),_=()=>T({type:o.DISMISS_TOAST,toastId:t});return T({type:o.ADD_TOAST,toast:{...e,id:t,open:!0,onOpenChange:S=>{S||_()}}}),{id:t,dismiss:_,update:a}}const E=Object.freeze(Object.defineProperty({__proto__:null,toast:i,useToast:p},Symbol.toStringTag,{value:"Module"}));export{E as _,i as t,p as u};
